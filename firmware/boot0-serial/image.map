
Allocating common symbols
Common symbol       size              file

tem                 0x4               main.o
data                0x4               main.o
isr_table           0x80              soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
bram             0x0000000000860000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000860000                _BRAM_START = 0x860000
                0x0000000000001000                _BRAM_SIZE = 0x1000
                0x0000000000861000                _BRAM_END = (_BRAM_START + _BRAM_SIZE)

.text           0x0000000000860000      0x668
                0x0000000000860000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000860000      0x208 crt0ram.o
                0x0000000000860000                _start
                0x0000000000860140                irq_enable
                0x000000000086014c                irq_disable
                0x0000000000860158                irq_set_mask
                0x0000000000860160                irq_get_mask
                0x0000000000860168                jump
                0x000000000086016c                halt
                0x00000000008601f8                get_sp
                0x0000000000860200                get_gp
 .text          0x0000000000860208       0x30 main.o
                0x0000000000860208                main
 .text          0x0000000000860238      0x430 soc-hw.o
                0x0000000000860238                isr_null
                0x000000000086023c                irq_handler
                0x00000000008602d0                isr_init
                0x00000000008602f4                isr_register
                0x000000000086030c                isr_unregister
                0x000000000086032c                msleep
                0x0000000000860368                nsleep
                0x000000000086039c                m1sleep
                0x00000000008603d8                flancopos
                0x00000000008603f4                flanconeg
                0x000000000086040c                uart_init
                0x0000000000860410                prueba1
                0x0000000000860458                uart_getchar
                0x000000000086047c                uart_getint
                0x000000000086049c                uart_putchar1
                0x00000000008604c0                uart_getchar1
                0x00000000008604e4                uart_putchar
                0x0000000000860508                uart_putint
                0x0000000000860528                uart_putstr
                0x000000000086055c                prueba
                0x00000000008605cc                sensor
                0x0000000000860668                _etext = .

.rodata         0x0000000000860668       0x2c
                0x0000000000860668                . = ALIGN (0x4)
                0x0000000000860668                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000860668        0x4 soc-hw.o
                                          0x8 (size before relaxing)
 .rodata.str1.4
                0x000000000086066c       0x28 soc-hw.o
 *(.rodata1)
                0x0000000000860694                _erodata = .

.data           0x0000000000860694       0x14
                0x0000000000860694                . = ALIGN (0x4)
                0x0000000000860694                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000860694        0x0 crt0ram.o
 .data          0x0000000000860694        0x0 main.o
 .data          0x0000000000860694       0x14 soc-hw.o
                0x0000000000860694                uart0
                0x0000000000860698                uart1
                0x000000000086069c                gpio0
                0x00000000008606a0                timer1
                0x00000000008606a4                timer0
 *(.data1)
                0x00000000008606b0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000000008606a8                _edata = .

.bss            0x00000000008606a8       0x8c
                0x00000000008606a8                . = ALIGN (0x4)
                0x00000000008606a8                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000008606a8        0x0 crt0ram.o
 .bss           0x00000000008606a8        0x0 main.o
 .bss           0x00000000008606a8        0x4 soc-hw.o
                0x00000000008606a8                msec
 *(COMMON)
 COMMON         0x00000000008606ac        0x8 main.o
                0x00000000008606ac                tem
                0x00000000008606b0                data
 COMMON         0x00000000008606b4       0x80 soc-hw.o
                0x00000000008606b4                isr_table
                0x0000000000860734                _ebss = .
                0x0000000000860734                _end = .
                0x0000000000860ffc                PROVIDE (_fstack, ((ORIGIN (bram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x378
 .debug_abbrev  0x0000000000000000       0xe7 main.o
 .debug_abbrev  0x00000000000000e7      0x291 soc-hw.o

.debug_info     0x0000000000000000      0x750
 .debug_info    0x0000000000000000      0x15f main.o
 .debug_info    0x000000000000015f      0x5f1 soc-hw.o

.debug_line     0x0000000000000000      0x557
 .debug_line    0x0000000000000000       0x72 main.o
 .debug_line    0x0000000000000072      0x4e5 soc-hw.o

.debug_frame    0x0000000000000000      0x180
 .debug_frame   0x0000000000000000       0x20 main.o
 .debug_frame   0x0000000000000020      0x160 soc-hw.o

.debug_pubnames
                0x0000000000000000      0x1cc
 .debug_pubnames
                0x0000000000000000       0x2c main.o
 .debug_pubnames
                0x000000000000002c      0x1a0 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x85
 .debug_pubtypes
                0x0000000000000000       0x36 main.o
 .debug_pubtypes
                0x0000000000000036       0x4f soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x267
 .debug_str     0x0000000000000000       0xf1 main.o
                                         0xfd (size before relaxing)
 .debug_str     0x00000000000000f1      0x176 soc-hw.o
                                        0x252 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_loc      0x0000000000000000      0x152
 .debug_loc     0x0000000000000000      0x152 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
